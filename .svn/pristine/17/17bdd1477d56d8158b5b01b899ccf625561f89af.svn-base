<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="zh">
<head>
<!-- Generated by javadoc (version 1.7.0_25) on Sat Jun 06 11:11:05 CST 2015 -->
<title>RedisEao</title>
<meta name="date" content="2015-06-06">
<link rel="stylesheet" type="text/css" href="../../../../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="RedisEao";
    }
//-->
</script>
<noscript>
<div>您的浏览器已禁用 JavaScript。</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="跳过导航链接"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="导航">
<li><a href="../../../../overview-summary.html">概览</a></li>
<li><a href="package-summary.html">程序包</a></li>
<li class="navBarCell1Rev">类</li>
<li><a href="package-tree.html">树</a></li>
<li><a href="../../../../deprecated-list.html">已过时</a></li>
<li><a href="../../../../index-files/index-1.html">索引</a></li>
<li><a href="../../../../help-doc.html">帮助</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>上一个类</li>
<li>下一个类</li>
</ul>
<ul class="navList">
<li><a href="../../../../index.html?com/job5156/core/eao/RedisEao.html" target="_top">框架</a></li>
<li><a href="RedisEao.html" target="_top">无框架</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../allclasses-noframe.html">所有类</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>概要:&nbsp;</li>
<li>嵌套&nbsp;|&nbsp;</li>
<li>字段&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">构造器</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">方法</a></li>
</ul>
<ul class="subNavList">
<li>详细资料:&nbsp;</li>
<li>字段&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">构造器</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">方法</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">com.job5156.core.eao</div>
<h2 title="类 RedisEao" class="title">类 RedisEao</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>com.job5156.core.eao.RedisEao</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>@Repository
public class <span class="strong">RedisEao</span>
extends java.lang.Object</pre>
<div class="block"><p>redis缓存持久类</p>
 Date:2015/5/20 10:50</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>构造器概要</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="构造器概要表, 列表构造器和解释">
<caption><span>构造器</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">构造器和说明</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#RedisEao()">RedisEao</a></strong>()</code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>方法概要</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="方法概要表, 列表方法和解释">
<caption><span>方法</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">限定符和类型</th>
<th class="colLast" scope="col">方法和说明</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.Long</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#del(java.lang.String)">del</a></strong>(java.lang.String&nbsp;key)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.Long</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#getKeyExpireTime(java.lang.String)">getKeyExpireTime</a></strong>(java.lang.String&nbsp;key)</code>
<div class="block">获取Redis key的生存期</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>org.springframework.data.redis.core.RedisTemplate&lt;java.io.Serializable,java.io.Serializable&gt;</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#getRedisTemplate(java.lang.String)">getRedisTemplate</a></strong>(java.lang.String&nbsp;key)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.util.Map&lt;java.lang.String,java.lang.Integer&gt;</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#hGetAll(java.lang.String)">hGetAll</a></strong>(java.lang.String&nbsp;key)</code>
<div class="block">获取redis中保存的map数据信息<br>
 注意：此方法调用在数据量较小时使用<br></div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.Long</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#hIncrBy(java.lang.String, java.lang.String, java.lang.Integer)">hIncrBy</a></strong>(java.lang.String&nbsp;key,
       java.lang.String&nbsp;field,
       java.lang.Integer&nbsp;value)</code>
<div class="block">增加数值保存到HASH的field中</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.Boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#isInSet(java.lang.String, java.lang.String)">isInSet</a></strong>(java.lang.String&nbsp;key,
       java.lang.String&nbsp;value)</code>
<div class="block">判断某个值是否存在在Redis的Set中</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.Boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#isKeyExist(java.lang.String)">isKeyExist</a></strong>(java.lang.String&nbsp;key)</code>
<div class="block">判断Redis key是否存在</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>&lt;T&gt;&nbsp;T</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#popObjectFromList(java.lang.String, java.lang.Class)">popObjectFromList</a></strong>(java.lang.String&nbsp;key,
                 java.lang.Class&lt;T&gt;&nbsp;cla)</code>
<div class="block">删除并返回LIST中的首个元素</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.util.List&lt;java.lang.String&gt;</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#readFromList(java.lang.String)">readFromList</a></strong>(java.lang.String&nbsp;key)</code>
<div class="block">将内容从Redis的List中读取</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.util.Set&lt;java.lang.String&gt;</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#readFromSet(java.lang.String)">readFromSet</a></strong>(java.lang.String&nbsp;key)</code>
<div class="block">将内容从Redis的Set中读取</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#readFromString(java.lang.String)">readFromString</a></strong>(java.lang.String&nbsp;key)</code>
<div class="block">将内容从Redis的String类型中读取</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>&lt;T&gt;&nbsp;java.util.List&lt;T&gt;</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#readObjectFromList(java.lang.String, java.lang.Class)">readObjectFromList</a></strong>(java.lang.String&nbsp;key,
                  java.lang.Class&lt;T&gt;&nbsp;cla)</code>
<div class="block">从左向右读取对象列表</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>&lt;T&gt;&nbsp;java.util.List&lt;T&gt;</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#readObjectFromList(java.lang.String, java.lang.Class, int, int)">readObjectFromList</a></strong>(java.lang.String&nbsp;key,
                  java.lang.Class&lt;T&gt;&nbsp;cla,
                  int&nbsp;begin,
                  int&nbsp;end)</code>
<div class="block">从左向右读取对象列表，索引位置错误不返回异常，返回列表为空</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>&lt;T&gt;&nbsp;java.util.Map&lt;java.lang.String,T&gt;</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#readObjectFromMap(java.lang.String, java.lang.Class)">readObjectFromMap</a></strong>(java.lang.String&nbsp;key,
                 java.lang.Class&lt;T&gt;&nbsp;cla)</code>
<div class="block">从Redis中读取Map结构数据并封装到Map对象返回</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>&lt;T&gt;&nbsp;T</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#readObjectFromMap(java.lang.String, java.lang.String, java.lang.Class)">readObjectFromMap</a></strong>(java.lang.String&nbsp;key,
                 java.lang.String&nbsp;mapKey,
                 java.lang.Class&lt;T&gt;&nbsp;cla)</code>
<div class="block">从Redis中读取Map结构中某一个key的数据并返回</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>&lt;T&gt;&nbsp;T</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#readRedisVoFromHash(java.lang.String, T)">readRedisVoFromHash</a></strong>(java.lang.String&nbsp;key,
                   T&nbsp;vo)</code>
<div class="block">将值对象从Redis的Hash（哈希表）中读取</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.Boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#removeFromList(java.lang.String, java.lang.String)">removeFromList</a></strong>(java.lang.String&nbsp;key,
              java.lang.String&nbsp;value)</code>
<div class="block">将字符串移出REDIS
 移出KEY对应的LIST里表中，所有的值等于VALUE的元素</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.Boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#removeFromMap(java.lang.String, java.lang.String)">removeFromMap</a></strong>(java.lang.String&nbsp;key,
             java.lang.String&nbsp;mapKey)</code>
<div class="block">从Redis的Map中移除某个key及value映射</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.Boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#removeFromSet(java.lang.String, java.lang.String)">removeFromSet</a></strong>(java.lang.String&nbsp;key,
             java.lang.String&nbsp;value)</code>
<div class="block">从Redis的Set中移除某个值</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.Boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#setKeyExpire(java.lang.String, long)">setKeyExpire</a></strong>(java.lang.String&nbsp;key,
            long&nbsp;seconds)</code>
<div class="block">设置Redis key的生存期</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#setRedisTemplate(org.springframework.data.redis.core.RedisTemplate)">setRedisTemplate</a></strong>(org.springframework.data.redis.core.RedisTemplate&lt;java.io.Serializable,java.io.Serializable&gt;&nbsp;redisTemplate)</code>
<div class="block">给外部调用的main方法使用</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#sRem(java.lang.String, java.util.List)">sRem</a></strong>(java.lang.String&nbsp;key,
    java.util.List&lt;java.lang.String&gt;&nbsp;valueList)</code>
<div class="block">从Set中移除n条内容</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#trimList(java.lang.String, java.lang.Integer)">trimList</a></strong>(java.lang.String&nbsp;key,
        java.lang.Integer&nbsp;length)</code>
<div class="block">按长度将Redis的List限制到指定大小</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#trimList(java.lang.String, int, int)">trimList</a></strong>(java.lang.String&nbsp;key,
        int&nbsp;begin,
        int&nbsp;end)</code>
<div class="block">从左到右保留LIST中begin到end的元素[另外一重含义：删除不在范围内的元素]</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>&lt;T&gt;&nbsp;java.lang.Boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#writeObjectToList(java.lang.String, java.util.List)">writeObjectToList</a></strong>(java.lang.String&nbsp;key,
                 java.util.List&lt;T&gt;&nbsp;list)</code>
<div class="block">将对象列表写入REDIS
 如果KEY已经存在，先删除，然后再写入</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>&lt;T&gt;&nbsp;java.lang.Boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#writeObjectToList(java.lang.String, T)">writeObjectToList</a></strong>(java.lang.String&nbsp;key,
                 T&nbsp;t)</code>
<div class="block">将对象写入KEY对应的LIST对象列表</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>&lt;T&gt;&nbsp;void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#writeObjectToMap(java.lang.String, java.util.Map)">writeObjectToMap</a></strong>(java.lang.String&nbsp;key,
                java.util.Map&lt;java.lang.String,T&gt;&nbsp;map)</code>
<div class="block">将内容写入到Redis，保存类型为Map</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>&lt;T&gt;&nbsp;void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#writeObjectToMap(java.lang.String, java.lang.String, T)">writeObjectToMap</a></strong>(java.lang.String&nbsp;key,
                java.lang.String&nbsp;mapkey,
                T&nbsp;mapVal)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>&lt;T&gt;&nbsp;java.lang.Boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#writeRedisVoToHash(java.lang.String, T)">writeRedisVoToHash</a></strong>(java.lang.String&nbsp;key,
                  T&nbsp;vo)</code>
<div class="block">将值对象写入Redis，保存类型为Hash（哈希表）</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.Boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#writeToList(java.lang.String, java.util.List)">writeToList</a></strong>(java.lang.String&nbsp;key,
           java.util.List&lt;java.lang.String&gt;&nbsp;list)</code>
<div class="block">将内容插入到Redis，保存类型为List
 此方法只针对key不存在的情况，将list全部写入（所以用rpush的方法）
 如果key已经存在了，返回false</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.Boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#writeToList(java.lang.String, java.lang.String)">writeToList</a></strong>(java.lang.String&nbsp;key,
           java.lang.String&nbsp;value)</code>
<div class="block">将内容插入到Redis，保存类型为List
 key不存在的话就创建，存在的话就append（lpush）</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#writeToSet(java.lang.String, java.util.List)">writeToSet</a></strong>(java.lang.String&nbsp;key,
          java.util.List&lt;java.lang.String&gt;&nbsp;list)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#writeToSet(java.lang.String, java.lang.String)">writeToSet</a></strong>(java.lang.String&nbsp;key,
          java.lang.String&nbsp;value)</code>
<div class="block">将内容写入到Redis，保存类型为Set</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#writeToString(java.lang.String, java.lang.String)">writeToString</a></strong>(java.lang.String&nbsp;key,
             java.lang.String&nbsp;value)</code>
<div class="block">将内容写入Redis，保存类型为String</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#zAdd(java.lang.String, java.util.List)">zAdd</a></strong>(java.lang.String&nbsp;key,
    java.util.List&lt;java.lang.String&gt;&nbsp;list)</code>
<div class="block">将内容推入队列，队列是类型为SortedSet的Redis数据结构
 用zAdd的方法</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.Long</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#zCard(java.lang.String)">zCard</a></strong>(java.lang.String&nbsp;key)</code>
<div class="block">返回有序集合sortedSet中元素的个数</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.util.List&lt;java.lang.String&gt;</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#zRange(java.lang.String, long)">zRange</a></strong>(java.lang.String&nbsp;key,
      long&nbsp;count)</code>
<div class="block">返回有序集sortedSet中，指定数量的元素列表</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.util.List&lt;java.lang.String&gt;</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#zRange(java.lang.String, long, long)">zRange</a></strong>(java.lang.String&nbsp;key,
      long&nbsp;begin,
      long&nbsp;end)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.Long</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#zRank(java.lang.String, java.lang.String)">zRank</a></strong>(java.lang.String&nbsp;key,
     java.lang.String&nbsp;value)</code>
<div class="block">查找某个值在sortedSet中的索引位置</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/job5156/core/eao/RedisEao.html#zRem(java.lang.String, java.util.List)">zRem</a></strong>(java.lang.String&nbsp;key,
    java.util.List&lt;java.lang.String&gt;&nbsp;valueList)</code>
<div class="block">从SortedSet中移除n条内容</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>从类继承的方法&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>构造器详细资料</h3>
<a name="RedisEao()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>RedisEao</h4>
<pre>public&nbsp;RedisEao()</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>方法详细资料</h3>
<a name="getRedisTemplate(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getRedisTemplate</h4>
<pre>public&nbsp;org.springframework.data.redis.core.RedisTemplate&lt;java.io.Serializable,java.io.Serializable&gt;&nbsp;getRedisTemplate(java.lang.String&nbsp;key)</pre>
</li>
</ul>
<a name="setRedisTemplate(org.springframework.data.redis.core.RedisTemplate)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setRedisTemplate</h4>
<pre>public&nbsp;void&nbsp;setRedisTemplate(org.springframework.data.redis.core.RedisTemplate&lt;java.io.Serializable,java.io.Serializable&gt;&nbsp;redisTemplate)</pre>
<div class="block">给外部调用的main方法使用</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>redisTemplate</code> - </dd></dl>
</li>
</ul>
<a name="isKeyExist(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isKeyExist</h4>
<pre>public&nbsp;java.lang.Boolean&nbsp;isKeyExist(java.lang.String&nbsp;key)</pre>
<div class="block">判断Redis key是否存在</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - Key</dd>
<dt><span class="strong">返回:</span></dt><dd>存在返回true，否则返回false</dd></dl>
</li>
</ul>
<a name="getKeyExpireTime(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getKeyExpireTime</h4>
<pre>public&nbsp;java.lang.Long&nbsp;getKeyExpireTime(java.lang.String&nbsp;key)</pre>
<div class="block">获取Redis key的生存期</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>@param</code> - key</dd><dd><code>@return</code> - 设定文件</dd>
<dt><span class="strong">返回:</span></dt><dd>Long    返回类型</dd>
<dt><span class="strong">抛出:</span></dt>
<dd><code></code></dd></dl>
</li>
</ul>
<a name="setKeyExpire(java.lang.String, long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setKeyExpire</h4>
<pre>public&nbsp;java.lang.Boolean&nbsp;setKeyExpire(java.lang.String&nbsp;key,
                             long&nbsp;seconds)</pre>
<div class="block">设置Redis key的生存期</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - Key</dd><dd><code>seconds</code> - 存活期（秒）</dd>
<dt><span class="strong">返回:</span></dt><dd>成功设置返回true，否则返回false</dd></dl>
</li>
</ul>
<a name="del(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>del</h4>
<pre>public&nbsp;java.lang.Long&nbsp;del(java.lang.String&nbsp;key)</pre>
</li>
</ul>
<a name="writeToString(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeToString</h4>
<pre>public&nbsp;void&nbsp;writeToString(java.lang.String&nbsp;key,
                 java.lang.String&nbsp;value)</pre>
<div class="block">将内容写入Redis，保存类型为String</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - Key</dd><dd><code>value</code> - 内容</dd></dl>
</li>
</ul>
<a name="readFromString(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>readFromString</h4>
<pre>public&nbsp;java.lang.String&nbsp;readFromString(java.lang.String&nbsp;key)</pre>
<div class="block">将内容从Redis的String类型中读取</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - Key</dd>
<dt><span class="strong">返回:</span></dt><dd>内容</dd></dl>
</li>
</ul>
<a name="writeRedisVoToHash(java.lang.String,java.lang.Object)">
<!--   -->
</a><a name="writeRedisVoToHash(java.lang.String, T)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeRedisVoToHash</h4>
<pre>public&nbsp;&lt;T&gt;&nbsp;java.lang.Boolean&nbsp;writeRedisVoToHash(java.lang.String&nbsp;key,
                                       T&nbsp;vo)</pre>
<div class="block">将值对象写入Redis，保存类型为Hash（哈希表）</div>
<dl><dt><span class="strong">类型参数:</span></dt><dd><code>T</code> - 值对象泛型声明</dd><dt><span class="strong">参数:</span></dt><dd><code>key</code> - Key</dd><dd><code>vo</code> - 值对象的实体，需带待写入的值</dd>
<dt><span class="strong">返回:</span></dt><dd>成功写入返回true，否则返回false</dd></dl>
</li>
</ul>
<a name="readRedisVoFromHash(java.lang.String,java.lang.Object)">
<!--   -->
</a><a name="readRedisVoFromHash(java.lang.String, T)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>readRedisVoFromHash</h4>
<pre>public&nbsp;&lt;T&gt;&nbsp;T&nbsp;readRedisVoFromHash(java.lang.String&nbsp;key,
                        T&nbsp;vo)</pre>
<div class="block">将值对象从Redis的Hash（哈希表）中读取</div>
<dl><dt><span class="strong">类型参数:</span></dt><dd><code>T</code> - 值对象泛型声明</dd><dt><span class="strong">参数:</span></dt><dd><code>key</code> - Key</dd><dd><code>vo</code> - 值对象的实体，存放读取出来的内容，传参时传一个new出来的空内容对象即可</dd>
<dt><span class="strong">返回:</span></dt><dd>返回对应的值对象</dd></dl>
</li>
</ul>
<a name="writeToList(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeToList</h4>
<pre>public&nbsp;java.lang.Boolean&nbsp;writeToList(java.lang.String&nbsp;key,
                            java.lang.String&nbsp;value)</pre>
<div class="block">将内容插入到Redis，保存类型为List
 key不存在的话就创建，存在的话就append（lpush）</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - Key</dd><dd><code>value</code> - 待写入的值</dd>
<dt><span class="strong">返回:</span></dt><dd>成功写入返回true，否则返回false</dd></dl>
</li>
</ul>
<a name="writeToList(java.lang.String, java.util.List)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeToList</h4>
<pre>public&nbsp;java.lang.Boolean&nbsp;writeToList(java.lang.String&nbsp;key,
                            java.util.List&lt;java.lang.String&gt;&nbsp;list)</pre>
<div class="block">将内容插入到Redis，保存类型为List
 此方法只针对key不存在的情况，将list全部写入（所以用rpush的方法）
 如果key已经存在了，返回false</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - Key</dd><dd><code>list</code> - 待写入的列表值</dd>
<dt><span class="strong">返回:</span></dt><dd>成功写入返回true，否则返回false</dd></dl>
</li>
</ul>
<a name="removeFromList(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeFromList</h4>
<pre>public&nbsp;java.lang.Boolean&nbsp;removeFromList(java.lang.String&nbsp;key,
                               java.lang.String&nbsp;value)</pre>
<div class="block">将字符串移出REDIS
 移出KEY对应的LIST里表中，所有的值等于VALUE的元素</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - </dd><dd><code>value</code> - </dd>
<dt><span class="strong">返回:</span></dt><dd></dd></dl>
</li>
</ul>
<a name="writeObjectToList(java.lang.String, java.util.List)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeObjectToList</h4>
<pre>public&nbsp;&lt;T&gt;&nbsp;java.lang.Boolean&nbsp;writeObjectToList(java.lang.String&nbsp;key,
                                      java.util.List&lt;T&gt;&nbsp;list)</pre>
<div class="block">将对象列表写入REDIS
 如果KEY已经存在，先删除，然后再写入</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - </dd><dd><code>list</code> - </dd>
<dt><span class="strong">返回:</span></dt><dd></dd></dl>
</li>
</ul>
<a name="writeObjectToList(java.lang.String,java.lang.Object)">
<!--   -->
</a><a name="writeObjectToList(java.lang.String, T)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeObjectToList</h4>
<pre>public&nbsp;&lt;T&gt;&nbsp;java.lang.Boolean&nbsp;writeObjectToList(java.lang.String&nbsp;key,
                                      T&nbsp;t)</pre>
<div class="block">将对象写入KEY对应的LIST对象列表</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - </dd><dd><code>t</code> - </dd>
<dt><span class="strong">返回:</span></dt><dd></dd></dl>
</li>
</ul>
<a name="readObjectFromList(java.lang.String, java.lang.Class)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>readObjectFromList</h4>
<pre>public&nbsp;&lt;T&gt;&nbsp;java.util.List&lt;T&gt;&nbsp;readObjectFromList(java.lang.String&nbsp;key,
                                       java.lang.Class&lt;T&gt;&nbsp;cla)</pre>
<div class="block">从左向右读取对象列表</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - </dd>
<dt><span class="strong">返回:</span></dt><dd></dd></dl>
</li>
</ul>
<a name="readObjectFromList(java.lang.String, java.lang.Class, int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>readObjectFromList</h4>
<pre>public&nbsp;&lt;T&gt;&nbsp;java.util.List&lt;T&gt;&nbsp;readObjectFromList(java.lang.String&nbsp;key,
                                       java.lang.Class&lt;T&gt;&nbsp;cla,
                                       int&nbsp;begin,
                                       int&nbsp;end)</pre>
<div class="block">从左向右读取对象列表，索引位置错误不返回异常，返回列表为空</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - </dd><dd><code>begin</code> - 索引开始位置[0：第一个元素]</dd><dd><code>end</code> - 索引结束位置[-1：最后一个元素，-2：倒数第2个元素...]</dd>
<dt><span class="strong">返回:</span></dt><dd></dd></dl>
</li>
</ul>
<a name="readFromList(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>readFromList</h4>
<pre>public&nbsp;java.util.List&lt;java.lang.String&gt;&nbsp;readFromList(java.lang.String&nbsp;key)</pre>
<div class="block">将内容从Redis的List中读取</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - Key</dd>
<dt><span class="strong">返回:</span></dt><dd>返回对应的列表</dd></dl>
</li>
</ul>
<a name="writeToSet(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeToSet</h4>
<pre>public&nbsp;void&nbsp;writeToSet(java.lang.String&nbsp;key,
              java.lang.String&nbsp;value)</pre>
<div class="block">将内容写入到Redis，保存类型为Set</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - Key</dd><dd><code>value</code> - 写入Set的值</dd></dl>
</li>
</ul>
<a name="writeToSet(java.lang.String, java.util.List)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeToSet</h4>
<pre>public&nbsp;void&nbsp;writeToSet(java.lang.String&nbsp;key,
              java.util.List&lt;java.lang.String&gt;&nbsp;list)</pre>
</li>
</ul>
<a name="readFromSet(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>readFromSet</h4>
<pre>public&nbsp;java.util.Set&lt;java.lang.String&gt;&nbsp;readFromSet(java.lang.String&nbsp;key)</pre>
<div class="block">将内容从Redis的Set中读取</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - Key</dd>
<dt><span class="strong">返回:</span></dt><dd>Redis中保存的Set内容</dd></dl>
</li>
</ul>
<a name="writeObjectToMap(java.lang.String, java.util.Map)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeObjectToMap</h4>
<pre>public&nbsp;&lt;T&gt;&nbsp;void&nbsp;writeObjectToMap(java.lang.String&nbsp;key,
                        java.util.Map&lt;java.lang.String,T&gt;&nbsp;map)</pre>
<div class="block">将内容写入到Redis，保存类型为Map</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - </dd><dd><code>map</code> - </dd></dl>
</li>
</ul>
<a name="writeObjectToMap(java.lang.String,java.lang.String,java.lang.Object)">
<!--   -->
</a><a name="writeObjectToMap(java.lang.String, java.lang.String, T)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeObjectToMap</h4>
<pre>public&nbsp;&lt;T&gt;&nbsp;void&nbsp;writeObjectToMap(java.lang.String&nbsp;key,
                        java.lang.String&nbsp;mapkey,
                        T&nbsp;mapVal)</pre>
</li>
</ul>
<a name="readObjectFromMap(java.lang.String, java.lang.Class)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>readObjectFromMap</h4>
<pre>public&nbsp;&lt;T&gt;&nbsp;java.util.Map&lt;java.lang.String,T&gt;&nbsp;readObjectFromMap(java.lang.String&nbsp;key,
                                                      java.lang.Class&lt;T&gt;&nbsp;cla)</pre>
<div class="block">从Redis中读取Map结构数据并封装到Map对象返回</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - </dd><dd><code>cla</code> - </dd>
<dt><span class="strong">返回:</span></dt><dd></dd></dl>
</li>
</ul>
<a name="readObjectFromMap(java.lang.String, java.lang.String, java.lang.Class)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>readObjectFromMap</h4>
<pre>public&nbsp;&lt;T&gt;&nbsp;T&nbsp;readObjectFromMap(java.lang.String&nbsp;key,
                      java.lang.String&nbsp;mapKey,
                      java.lang.Class&lt;T&gt;&nbsp;cla)</pre>
<div class="block">从Redis中读取Map结构中某一个key的数据并返回</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - </dd><dd><code>mapKey</code> - </dd><dd><code>cla</code> - </dd>
<dt><span class="strong">返回:</span></dt><dd></dd></dl>
</li>
</ul>
<a name="removeFromMap(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeFromMap</h4>
<pre>public&nbsp;java.lang.Boolean&nbsp;removeFromMap(java.lang.String&nbsp;key,
                              java.lang.String&nbsp;mapKey)</pre>
<div class="block">从Redis的Map中移除某个key及value映射</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - </dd><dd><code>mapKey</code> - </dd>
<dt><span class="strong">返回:</span></dt><dd></dd></dl>
</li>
</ul>
<a name="isInSet(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isInSet</h4>
<pre>public&nbsp;java.lang.Boolean&nbsp;isInSet(java.lang.String&nbsp;key,
                        java.lang.String&nbsp;value)</pre>
<div class="block">判断某个值是否存在在Redis的Set中</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - Key</dd><dd><code>value</code> - 需要判断的值</dd>
<dt><span class="strong">返回:</span></dt><dd>存在返回True，否则返回False</dd></dl>
</li>
</ul>
<a name="removeFromSet(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeFromSet</h4>
<pre>public&nbsp;java.lang.Boolean&nbsp;removeFromSet(java.lang.String&nbsp;key,
                              java.lang.String&nbsp;value)</pre>
<div class="block">从Redis的Set中移除某个值</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - </dd><dd><code>value</code> - </dd>
<dt><span class="strong">返回:</span></dt><dd></dd></dl>
</li>
</ul>
<a name="trimList(java.lang.String, java.lang.Integer)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>trimList</h4>
<pre>public&nbsp;void&nbsp;trimList(java.lang.String&nbsp;key,
            java.lang.Integer&nbsp;length)</pre>
<div class="block">按长度将Redis的List限制到指定大小</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - Key</dd><dd><code>length</code> - 长度</dd></dl>
</li>
</ul>
<a name="trimList(java.lang.String, int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>trimList</h4>
<pre>public&nbsp;void&nbsp;trimList(java.lang.String&nbsp;key,
            int&nbsp;begin,
            int&nbsp;end)</pre>
<div class="block">从左到右保留LIST中begin到end的元素[另外一重含义：删除不在范围内的元素]</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - </dd><dd><code>begin</code> - 索引开始位置[0：第一个元素]</dd><dd><code>end</code> - 索引结束位置[-1：最后一个元素，-2：倒数第2个元素...]</dd></dl>
</li>
</ul>
<a name="zAdd(java.lang.String, java.util.List)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>zAdd</h4>
<pre>public&nbsp;void&nbsp;zAdd(java.lang.String&nbsp;key,
        java.util.List&lt;java.lang.String&gt;&nbsp;list)</pre>
<div class="block">将内容推入队列，队列是类型为SortedSet的Redis数据结构
 用zAdd的方法</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - Key</dd><dd><code>list</code> - 待写入的列表值</dd></dl>
</li>
</ul>
<a name="zRange(java.lang.String, long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>zRange</h4>
<pre>public&nbsp;java.util.List&lt;java.lang.String&gt;&nbsp;zRange(java.lang.String&nbsp;key,
                                      long&nbsp;count)</pre>
<div class="block">返回有序集sortedSet中，指定数量的元素列表</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - </dd><dd><code>count</code> - 元素数量</dd>
<dt><span class="strong">返回:</span></dt><dd></dd></dl>
</li>
</ul>
<a name="zRange(java.lang.String, long, long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>zRange</h4>
<pre>public&nbsp;java.util.List&lt;java.lang.String&gt;&nbsp;zRange(java.lang.String&nbsp;key,
                                      long&nbsp;begin,
                                      long&nbsp;end)</pre>
</li>
</ul>
<a name="zCard(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>zCard</h4>
<pre>public&nbsp;java.lang.Long&nbsp;zCard(java.lang.String&nbsp;key)</pre>
<div class="block">返回有序集合sortedSet中元素的个数</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - </dd>
<dt><span class="strong">返回:</span></dt><dd></dd></dl>
</li>
</ul>
<a name="sRem(java.lang.String, java.util.List)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sRem</h4>
<pre>public&nbsp;void&nbsp;sRem(java.lang.String&nbsp;key,
        java.util.List&lt;java.lang.String&gt;&nbsp;valueList)</pre>
<div class="block">从Set中移除n条内容</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - </dd><dd><code>valueList</code> - </dd></dl>
</li>
</ul>
<a name="zRem(java.lang.String, java.util.List)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>zRem</h4>
<pre>public&nbsp;void&nbsp;zRem(java.lang.String&nbsp;key,
        java.util.List&lt;java.lang.String&gt;&nbsp;valueList)</pre>
<div class="block">从SortedSet中移除n条内容</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - </dd><dd><code>valueList</code> - </dd></dl>
</li>
</ul>
<a name="zRank(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>zRank</h4>
<pre>public&nbsp;java.lang.Long&nbsp;zRank(java.lang.String&nbsp;key,
                   java.lang.String&nbsp;value)</pre>
<div class="block">查找某个值在sortedSet中的索引位置</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - sortedSet集合对应的key</dd><dd><code>value</code> - 要索引的元素值</dd>
<dt><span class="strong">返回:</span></dt><dd></dd></dl>
</li>
</ul>
<a name="popObjectFromList(java.lang.String, java.lang.Class)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>popObjectFromList</h4>
<pre>public&nbsp;&lt;T&gt;&nbsp;T&nbsp;popObjectFromList(java.lang.String&nbsp;key,
                      java.lang.Class&lt;T&gt;&nbsp;cla)</pre>
<div class="block">删除并返回LIST中的首个元素</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - </dd>
<dt><span class="strong">返回:</span></dt><dd></dd></dl>
</li>
</ul>
<a name="hIncrBy(java.lang.String, java.lang.String, java.lang.Integer)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hIncrBy</h4>
<pre>public&nbsp;java.lang.Long&nbsp;hIncrBy(java.lang.String&nbsp;key,
                     java.lang.String&nbsp;field,
                     java.lang.Integer&nbsp;value)</pre>
<div class="block">增加数值保存到HASH的field中</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - </dd><dd><code>field</code> - hash中的field字段</dd><dd><code>value</code> - 增加的数值</dd>
<dt><span class="strong">返回:</span></dt><dd></dd></dl>
</li>
</ul>
<a name="hGetAll(java.lang.String)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>hGetAll</h4>
<pre>public&nbsp;java.util.Map&lt;java.lang.String,java.lang.Integer&gt;&nbsp;hGetAll(java.lang.String&nbsp;key)</pre>
<div class="block">获取redis中保存的map数据信息<br>
 注意：此方法调用在数据量较小时使用<br></div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>key</code> - </dd>
<dt><span class="strong">返回:</span></dt><dd></dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="跳过导航链接"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="导航">
<li><a href="../../../../overview-summary.html">概览</a></li>
<li><a href="package-summary.html">程序包</a></li>
<li class="navBarCell1Rev">类</li>
<li><a href="package-tree.html">树</a></li>
<li><a href="../../../../deprecated-list.html">已过时</a></li>
<li><a href="../../../../index-files/index-1.html">索引</a></li>
<li><a href="../../../../help-doc.html">帮助</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>上一个类</li>
<li>下一个类</li>
</ul>
<ul class="navList">
<li><a href="../../../../index.html?com/job5156/core/eao/RedisEao.html" target="_top">框架</a></li>
<li><a href="RedisEao.html" target="_top">无框架</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../allclasses-noframe.html">所有类</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>概要:&nbsp;</li>
<li>嵌套&nbsp;|&nbsp;</li>
<li>字段&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">构造器</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">方法</a></li>
</ul>
<ul class="subNavList">
<li>详细资料:&nbsp;</li>
<li>字段&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">构造器</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">方法</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
