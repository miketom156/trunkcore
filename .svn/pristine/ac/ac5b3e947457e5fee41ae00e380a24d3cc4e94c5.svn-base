<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/cache
		http://www.springframework.org/schema/cache/spring-cache-3.1.xsd">

    <!--<import resource="classpath:/applicationContext-web.xml"/>-->
    <!--<import resource="classpath:/applicationContext-app.xml"/>-->
    <import resource="classpath:/applicationContext-dao.xml"/>
    <import resource="classpath:/applicationContext-service.xml"/>
    <import resource="classpath:/applicationContext-resources.xml"/>
    <context:component-scan base-package="com.job5156.core">
        <context:exclude-filter type="regex" expression="com.job5156.webapp.controller.*"/>
        <context:exclude-filter type="regex" expression="com.job5156.api.controller.*"/>
    </context:component-scan>

    <context:annotation-config />
    <bean id="log4jInitialization"
          class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass"
                  value="org.springframework.util.Log4jConfigurer" />
        <property name="targetMethod" value="initLogging" />
        <property name="arguments">
            <list>
                <value>classpath:log4j.properties</value>
            </list>
        </property>
    </bean>
<!--	<bean id="perResumeServiceImpl" class="com.job5156.com.job5156.srv.impl.PerResumeServiceImpl">
		<property name="perResumeDao" ref="perResumeDaoImpl" />
	</bean>

	<bean id="perResumeDaoImpl" class="com.job5156.core.eao.impl.PerResumeDaoImplTemplate">
	</bean>-->
    <bean id="applicationContextUtil" class="com.job5156.core.common.util.ApplicationContextUtil" />
    <!-- aop -->
    <aop:aspectj-autoproxy expose-proxy="true" />

    <cache:annotation-driven cache-manager="cacheManager" proxy-target-class="true"/>

    <bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="shared" value="true" />
    </bean>

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="cacheManagerFactory" />
    </bean>

    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg type="java.util.Properties">
                    <props>
                        <prop key="kaptcha.textproducer.char.string">23456789abcefghjknmprstvwxyz</prop>
                        <prop key="kaptcha.border">yes</prop>
                        <prop key="kaptcha.border.color">204,204,204</prop>
                        <prop key="kaptcha.image.width">100</prop>
                        <prop key="kaptcha.image.height">30</prop>
                        <prop key="kaptcha.textproducer.char.space">6</prop>
                        <prop key="kaptcha.textproducer.char.length">4</prop><!--验证码文本字符长度  默认为5 -->
                        <prop key="kaptcha.textproducer.font.names">Arial</prop>
                        <prop key="kaptcha.textproducer.font.size">22</prop><!--验证码文本字符大小  默认为40 -->
                        <prop key="kaptcha.textproducer.font.color">black</prop>
                        <prop key="kaptcha.background.clear.from">241,241,241</prop>
                        <prop key="kaptcha.background.clear.to">255,255,255</prop>
                        <prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop><!-- 验证码噪点生成对象  默认为DefaultNoise -->
                        <prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.ShadowGimpy</prop><!--验证码样式引擎有WaterRipple（水纹类似的）、ShadowGimpy(投影)、FishEyeGimpy（鱼眼）三种样式   默认为WaterRipple -->
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <bean id="dynamicCaptchaProducer" class="com.job5156.core.common.image.DynamicKaptcha" scope="prototype">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg type="java.util.Properties">
                    <props>
                        <prop key="kaptcha.border">no</prop>
                        <prop key="kaptcha.border.color">204,204,204</prop>
                        <prop key="kaptcha.image.width">150</prop>
                        <prop key="kaptcha.image.height">25</prop>
                        <prop key="kaptcha.textproducer.char.space">2</prop>
                        <prop key="kaptcha.textproducer.font.names">tahoma</prop>
                        <prop key="kaptcha.textproducer.font.size">14</prop>
                        <prop key="kaptcha.textproducer.font.color">black</prop>
                        <prop key="kaptcha.background.clear.from">white</prop>
                        <prop key="kaptcha.background.clear.to">white</prop>
                        <prop key="kaptcha.word.impl">com.job5156.webapp.component.image.CustomWordRenderer</prop>
                        <prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>
</beans>